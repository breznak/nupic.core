version: 2
jobs:
  build-and-test:
    macos:
      xcode: '10.1.0'
    working_directory: ~/numenta/nupic.core
    parallelism: 1
    environment:
      XCODE_SCHEME: nupic
      XCODE_WORKSPACE: nupic
      ARCHFLAGS: -arch x86_64
    steps:
      # Machine Setup
      - run:
          name: Make sure to use OS X in CircleCI Web UI
          command: |
            if [[ "$OSTYPE" != "darwin"* ]]; then
              echo "Must set option to use OS X in CircleCI Web UI" && exit 1;
            fi
      - run: sudo systemsetup -settimezone 'GMT'
      - run:
          name: Restoring system python
          command: |
            echo 'python version: ' && python --version
            echo 'pip version: ' && python -m pip --version 
            echo 'python version: ' && python --version
      - run:
          name: Installing cmake 
          command: brew install cmake || brew install cmake
      - checkout

      # Dependencies
      # Restore the dependency cache
      #      - restore_cache:
      #    keys:
      #    # This branch if available
      #    - v1-dep-{{ .Branch }}-
      #    # Default branch if not
      #    - v1-dep-master-
      #    # Any branch if there are none on the default branch - this should be 
      #    # unnecessary if you have your default branch configured correctly
      #    - v1-dep-

      - run:
           name: Installing python dependencies
           command: |
                   python -m pip install --user --upgrade pip setuptools setuptools-scm
                   python -m pip install --no-cache-dir --user -r bindings/py/packaging/requirements.txt  --verbose || exit

      # Save dependency cache
      #      - save_cache:
      #    key: v1-dep-{{ .Branch }}-{{ epoch }}
      #    paths:
      #    # This is a broad list of cache paths to include many possible 
      #    # development environments.
      #    - vendor/bundle
      #    - ~/virtualenvs
      #    - ~/.m2
      #    - ~/.ivy2
      #    - ~/.bundle
      #    - ~/.go_workspace
      #    - ~/.gradle
      #    - ~/.cache/bower

      # Build 
      - run:
          name: Compiling
          environment:
            VERBOSE: 1
          command: |
            mkdir -p build/scripts
            cd build/scripts
            cmake ../.. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../Release 
            make | grep -v -F '\\-\\- Installing:'
            make install 2>&1 | grep -v -F 'Installing:'
       
      - run:
           name: Install Python extension
           command: python setup.py install --user --prefix=

      # Test
      - run:
          name: Running C++ Tests
          command: |
              mkdir -p $CIRCLE_WORKING_DIRECTORY/tests/cpp
              cd ./build/Release/bin
              ./unit_tests --gtest_output=xml:$CIRCLE_WORKING_DIRECTORY/tests/cpp/unit_tests_report.xml
      - run:
          name: Running python tests
          command: python setup.py test


      - store_test_results:
          path: tests
    
      - store_artifacts:
          path: dist/*.whl
        
      ##- persist_to_workspace:
      ##    root: dist
      ##    paths:
      ##    - nupic.bindings*.whl
      ##    - requirements.txt
      ##    - include/nupic

            #  deploy-s3:
            #machine: true
            #steps:
            #- attach_workspace:
            #at: dist
            #- run:
            #name: Deploying to S3
            #command: |
            #pip install awscli --upgrade --user
            #tar -zcv -f nupic_core-${CIRCLE_SHA1}-darwin64.tar.gz dist
            #aws s3 cp nupic_core-${CIRCLE_SHA1}-darwin64.tar.gz s3://artifacts.numenta.org/numenta/nupic.core/circle/

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
